{# The whitespace control strategy is to end all blocks with "-%", and
   _not_ use "%-" at the beginning of blocks.  This means that block
   content must always end with the desired trailing whitespace,
   including empty lines.
-#}
{% set alembic_only = cookiecutter.configuration_file_type != 'ini' -%}
{% if not alembic_only -%}
###
# app configuration
# https://docs.pylonsproject.org/projects/pyramid/en/latest/narr/environment.html
###

{% endif -%}
[app:main]
use = egg:{{ cookiecutter.repo_name }}

{% if not alembic_only -%}
pyramid.reload_templates = false
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en

{% endif -%}
{% if cookiecutter.backend == 'sqlalchemy' -%}
sqlalchemy.url = sqlite:///testing.sqlite

{% elif cookiecutter.backend == 'zodb' and not alembic_only -%}
zodbconn.uri = file://Data.testing.fs?connection_cache_size=20000

{% endif -%}

{% if cookiecutter.backend == 'sqlalchemy'
       or (cookiecutter.backend == 'zodb' and not alembic_only) -%}
retry.attempts = 3

{% endif -%}
{% if not alembic_only -%}
[pshell]
setup = {{ cookiecutter.repo_name }}.pshell.setup

{% endif -%}
{% if cookiecutter.backend == 'sqlalchemy' -%}
[alembic]
# path to migration scripts
script_location = {{ cookiecutter.repo_name }}/alembic
file_template = %%(year)d%%(month).2d%%(day).2d_%%(rev)s
# file_template = %%(rev)s_%%(slug)s

{% endif -%}
{% if not alembic_only -%}
###
# wsgi server configuration
###

[server:main]
use = egg:waitress#main
listen = localhost:6543

{% endif -%}
###
# logging configuration
# https://docs.pylonsproject.org/projects/pyramid/en/latest/narr/logging.html
###

[loggers]
{% if cookiecutter.backend == 'sqlalchemy' -%}
{% if alembic_only -%}
keys = root, sqlalchemy, alembic

{% else -%}
keys = root, {{ cookiecutter.repo_name }}, sqlalchemy, alembic

{% endif -%}
{% else -%}
keys = root, {{ cookiecutter.repo_name }}

{% endif -%}
[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

{% if not alembic_only -%}
[logger_{{ cookiecutter.repo_name }}]
level = DEBUG
handlers =
qualname = {{ cookiecutter.repo_name }}

{% endif -%}
{% if cookiecutter.backend == 'sqlalchemy' -%}
[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[logger_alembic]
level = WARN
handlers =
qualname = alembic

{% endif -%}
[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %%(asctime)s %%(levelname)-5.5s [%%(name)s:%%(lineno)s][%%(threadName)s] %%(message)s
